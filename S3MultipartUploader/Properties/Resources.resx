<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ProfileAdded" xml:space="preserve">
    <value>Profile "{0}" added!</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="bucket" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\bucket.ico;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="stop_upload" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\stop_upload.ico;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="NoFilesFound" xml:space="preserve">
    <value>No files found.</value>
  </data>
  <data name="OnlyOnePartFound" xml:space="preserve">
    <value>{0} files found, but only 1 of them was an object part.</value>
  </data>
  <data name="InvalidProfileSecretKey" xml:space="preserve">
    <value>Profile Secret Access Keys must contain exactly 40 lower and/or uppercase alphanumeric characters with no spaces, forward slashes ("/"), and/or plus signs ("+").</value>
  </data>
  <data name="ProfileAccessKeyIDRegex" xml:space="preserve">
    <value>^[0-9A-Z]{20}$</value>
  </data>
  <data name="MissingProfileName" xml:space="preserve">
    <value>You must provide a name for the new AWS credentials profile.</value>
  </data>
  <data name="pause_upload" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\pause_upload.ico;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ProfileSecretKeyRegex" xml:space="preserve">
    <value>^[0-9a-zA-Z/+]{40}$</value>
  </data>
  <data name="OnePartFound" xml:space="preserve">
    <value>1 object part found.</value>
  </data>
  <data name="OnlyPartsAllowed" xml:space="preserve">
    <value>The selected directory must only contain object parts.  These files are expected to have a numeric extension, e.g. "mydata.zip.003".</value>
  </data>
  <data name="profile" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\profile.ico;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="SelectDirectorySuccess" xml:space="preserve">
    <value>Selected Directory "{0}".</value>
  </data>
  <data name="InvalidProfileName" xml:space="preserve">
    <value>Profile names must only contain upper and lowercase alphanumeric characters with no spaces, and any of the following characters: =,.@-</value>
  </data>
  <data name="MissingAccessKeyID" xml:space="preserve">
    <value>You must provide an Access Key ID for the new AWS credentials profile.</value>
  </data>
  <data name="MissingSecretAccessKey" xml:space="preserve">
    <value>You must provide a Secret Access Key for the new AWS credentials profile.</value>
  </data>
  <data name="OnlyNPartsFound" xml:space="preserve">
    <value>{0} files found, but only {1} of them were object parts.</value>
  </data>
  <data name="s3_key" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\s3_key.ico;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="start_resume_upload" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\start_resume_upload.ico;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="add_profile" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\add_profile.ico;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="SelectDirectoryCancel" xml:space="preserve">
    <value>Directory selection cancelled.</value>
  </data>
  <data name="NPartsFound" xml:space="preserve">
    <value>{0} object parts found.</value>
  </data>
  <data name="ProfileNameRegex" xml:space="preserve">
    <value>^[0-9a-zA-Z=,.@-]+$</value>
  </data>
  <data name="aws_s3" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\aws_s3.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="InvalidProfileAccessKeyID" xml:space="preserve">
    <value>Profile Access Key IDs must contain exactly 20 uppercase letters and/or numbers.</value>
  </data>
  <data name="OnlyOneFileFound" xml:space="preserve">
    <value>1 file found, but it wasn't an object part.</value>
  </data>
  <data name="advanced_options" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\advanced_options.ico;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="NoPartsFound" xml:space="preserve">
    <value>{0} files found, but none of them were object parts.</value>
  </data>
  <data name="regions" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\regions.ico;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="BucketSelected" xml:space="preserve">
    <value>Bucket "{0}" selected.</value>
  </data>
  <data name="BucketsListed" xml:space="preserve">
    <value>{0} buckets found.</value>
  </data>
  <data name="InvalidS3Key" xml:space="preserve">
    <value>Profile names must only contain upper and lowercase alphanumeric characters with no spaces, and any of the following characters:  !-_.*'()/</value>
  </data>
  <data name="ListingBuckets" xml:space="preserve">
    <value>Listing S3 buckets available to profile {0}...</value>
  </data>
  <data name="ListingProfiles" xml:space="preserve">
    <value>Listing AWS credentials profiles stored on this machine...</value>
  </data>
  <data name="ListingS3Regions" xml:space="preserve">
    <value>Listing all AWS S3 regions...</value>
  </data>
  <data name="MissingProfile" xml:space="preserve">
    <value>You must select or add an AWS credentials profile.</value>
  </data>
  <data name="MissingRegion" xml:space="preserve">
    <value>You must select an AWS S3 region.</value>
  </data>
  <data name="MissingS3Bucket" xml:space="preserve">
    <value>You must select an AWS S3 bucket.</value>
  </data>
  <data name="MissingS3Key" xml:space="preserve">
    <value>You must provide an S3 key to give this object in the selected bucket.</value>
  </data>
  <data name="ProfileSelected" xml:space="preserve">
    <value>Profile "{0}" selected.</value>
  </data>
  <data name="ProfilesListed" xml:space="preserve">
    <value>{0} profiles found.</value>
  </data>
  <data name="RegionSelected" xml:space="preserve">
    <value>Region "{0}" selected.</value>
  </data>
  <data name="S3KeyRegex" xml:space="preserve">
    <value>^[0-9a-zA-Z!\-_.*'()/\\]+$</value>
  </data>
  <data name="S3RegionsListed" xml:space="preserve">
    <value>{0} regions listed.</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value>Before you can start uploading, you must select a credentials profile, region, and bucket, provide an object key, and select the directory with the object's parts.</value>
  </data>
</root>